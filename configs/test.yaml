# A simple substitutions file for nutmeg-parser that shows the 
# format.
name: if-expressions
description: Rewrite if-statements into canonical form
passes:

  - name: Pass 0, handle ifnot/elseifnot
    downwards:

      - name: part/if
        match:
          self:
            name: part
            key: keyword
            value: if
        action:
          replaceValue:
            key: iftype
            with: if

      - name: part/elseif
        match:
          self:
            name: part
            key: keyword
            value: elseif
        action:
          replaceValue:
            key: iftype
            with: elseif

      - name: part/ifnot
        match:
          self:
            name: part
            key: keyword
            value: ifnot
        action:
          replaceValue:
            key: iftype
            with: if

      - name: part/elseifnot
        match:
          self:
            name: part
            key: keyword
            value: elseifnot
        action:
          replaceValue:
            key: iftype
            with: elseif

   
    upwards:
      - name: form->if
        match:
          self:
            name: form
          child:
            name: part
            key: iftype
            value: if
            siblingPosition: 0
        action:
          replaceName:
            with: if

      - name: add-else
        match:
          self:
            name: if
          child:
            name: part
            key: keyword
            value: else
            cmp: false
            siblingPosition: -1
        action:
          newNodeChild:
            name: part
            key: keyword
            value: else
            offset: 1
            length: 0

      - name: normalise-elseif
        match:
          self:
            name: if
          child:
            name: part
            key: iftype
            value: elseif
            siblingPosition: -3
        action:
          newNodeChild:
            name: if
            length: 3
        repeatOnSuccess: true

  - name: Pass 1, introduce ifnot
    downwards:
      - name: if-not
        match:
          self:
            name: if
          child:
            name: part
            key: keyword
            value: ifnot          
            siblingPosition: 0
        action:
          replaceName:
            with: ifnot

      - name: elseif-not
        match:
          self:
            name: if
          child:
            name: part
            key: keyword
            value: elseifnot          
            siblingPosition: 0
        action:
          replaceName:
            with: ifnot

  # - name: Pass 1, remove <if><not>...</not>...</if>
  #   upwards:
  #     - name: part-not
  #       match:
  #         self:
  #           name: part
  #           count: 1
  #         child:
  #           name: not
  #       action:
  #         replaceByChild: 0

  #     - name: if-not
  #       match:
  #         self:
  #           name: if
  #           value: true
  #           count: 3
  #         child:
  #           name: not
  #           count: 1
  #           siblingPosition: 0
  #       action:
  #         sequence:
  #           - childAction:
  #               replaceName: 
  #                 with: seq
  #           - permuteChildren: [1,2]

  - name: Pass 2, flatten seq
    downwards:
      - name: part -> seq
        match:
          self:
            name: part
        action:
          replaceName:
            with: seq

      - name: seq-1
        match:
          self:
            name: seq
            count: 1
        action:
          replaceByChild: 0
