# A simple substitutions file for nutmeg-parser that shows the 
# format.
name: if-expressions
description: Rewrite if-statements into canonical form
passes:

  - name: Pass 0, handle ifnot/elseifnot
    downwards:

      - name: ifnot
        match:
          self:
            name: part
            key: keyword
            value: ifnot
          child:
            siblingPosition: 0
        action:
          sequence:
            - replaceValue:
                key: keyword
                with: if
            - newNodeChild:
                name: not
                count: 1

      - name: elseifnot
        match:
          self:
            name: part
            key: keyword
            value: elseifnot
          child:
            siblingPosition: 0
        action:
          sequence:
            - replaceValue:
                key: keyword
                with: elseif
            - newNodeChild:
                name: not
                count: 1

   
    upwards:
      - name: form->if
        match:
          self:
            name: form
          child:
            name: part
            key: keyword
            value: if
            siblingPosition: 0
        action:
          replaceName:
            key: keyword
            with: if

      - name: add-else
        match:
          self:
            name: if
          child:
            name: part
            key: keyword
            value: else
            cmp: false
            siblingPosition: -1
        action:
          newNodeChild:
            name: part
            key: keyword
            value: else
            offset: 1
            length: 0

      - name: Undo elseif
        match:
          self:
            name: if
          child:
            name: part
            key: keyword
            value: elseif
            siblingPosition: -3
        action:
          newNodeChild:
            name: if
            length: 3
        repeatOnSuccess: true



  - name: Pass 1, remove <if><not>...</not>...</if>
    upwards:
      - name: part-not
        match:
          self:
            name: part
            count: 1
          child:
            name: not
        action:
          replaceByChild: 0

      - name: if-not
        match:
          self:
            name: if
            value: true
            count: 3
          child:
            name: not
            count: 1
            siblingPosition: 0
        action:
          sequence:
            - childAction:
                replaceName: 
                  with: seq
            - permuteChildren: [1,2]

  - name: Pass 2, flatten seq
    downwards:
      - name: part -> seq
        match:
          self:
            name: part
        action:
          replaceName:
            with: seq

      - name: seq-1
        match:
          self:
            name: seq
            count: 1
        action:
          replaceByChild: 0
