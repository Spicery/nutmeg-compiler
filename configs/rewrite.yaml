# A simple substitutions file for nutmeg-parser that shows the 
# format.
name: Simple Rewrite Example
description: A simple example of rewriting a parse tree
passes:

  - name: Pass 1, handle ifnot/elseifnot
    downwards:

      - name: part/if
        match:
          self:
            name: part
            key: keyword
            value: if
        action:
          replaceValue:
            key: iftype
            with: if

      - name: part/elseif
        match:
          self:
            name: part
            key: keyword
            value: elseif
        action:
          replaceValue:
            key: iftype
            with: elseif

      - name: part/ifnot
        match:
          self:
            name: part
            key: keyword
            value: ifnot
        action:
          replaceValue:
            key: iftype
            with: if

      - name: part/elseifnot
        match:
          self:
            name: part
            key: keyword
            value: elseifnot
        action:
          replaceValue:
            key: iftype
            with: elseif

    upwards:
      - name: form->if
        match:
          self:
            name: form
          child:
            name: part
            key: iftype
            value: if
            siblingPosition: 0
        action:
          replaceName:
            with: if

      - name: add-else
        match:
          self:
            name: if
          child:
            name: part
            key: keyword
            value: else
            cmp: false
            siblingPosition: -1
        action:
          newNodeChild:
            name: part
            key: keyword
            value: else
            offset: 1
            length: 0

      - name: normalise-elseif
        match:
          self:
            name: if
          child:
            name: part
            key: iftype
            value: elseif
            siblingPosition: -3
        action:
          newNodeChild:
            name: if
            length: 3
        repeatOnSuccess: true

  - name: Pass 2, introduce ifnot
    downwards:
      - name: if-not
        match:
          self:
            name: if
          child:
            name: part
            key: keyword
            value: ifnot          
            siblingPosition: 0
        action:
          replaceName:
            with: ifnot

      - name: elseif-not
        match:
          self:
            name: if
          child:
            name: part
            key: keyword
            value: elseifnot          
            siblingPosition: 0
        action:
          replaceName:
            with: ifnot

  - name: Pass 3
    downwards:

      - name: Rename form using keyword
        match:
          self:
            name: form
          child:
            name: part
            key: keyword
            siblingPosition: 0
        action:
          replaceName:
            src: child
            from: value

      - name: Rename parts to seq
        match:
          self:
            name: part 
        action:
          replaceName:
            with: seq

      - name: Parentheses to seq
        match:
          self:
            name: delimited
            key: kind
            value: parentheses
        action:
          replaceName:
            with: seq

      - name: Rename negation as seq and toggle sign of number
        match:
          self:
            name: operator
            key: name
            value: "-"
            count: 1
          child:
            name: number
        action:
          sequence:
          - replaceName:
              with: seq
          - childAction:
              rotateOption:
                key: sign
                values: ["+", "-"]

      - name: Change ':=' to bind (POP)
        match:
          self:
            name: operator
            key: name
            value: ":="
            count: 2
        action:
          replaceName:
            with: bind

      - name: Change '<-' to assign (POP)
        match:
          self:
            name: operator
            key: name
            value: "<-"
            count: 2
        action:
          replaceName:
            with: assign

      - name: Change '<--' to update (UCALL)
        match:
          self:
            name: operator
            key: name
            value: "<--"
            count: 2
        action:
          replaceName:
            with: update

    upwards:
      - name: Anotation Merge (Step 1a)
        match:
          self:
            name: unit
          child:
            name: delimited
            key: kind
            value: brackets
          nextChild:
            name: delimited
            key: kind
            value: brackets
        action:
            mergeChildWithNext: false
        repeatOnSuccess: true

      - name: Anotation Merge (Step 1b)
        match:
          self:
            name: unit
          child:
            name: delimited
            key: kind
            value: brackets
        action:
          childAction:
            replaceName:
              with: seq

      - name: Annotation (Step 2)
        match:
          self:
            name: unit
          child:
            name: delimited
            key: kind
            value: brackets
          nextChild:
            name: def
        action:
          newNodeChild:
            name: annotation
            lengfth: 2

      - name: Inline nested sequences
        match:
          self:
            name: seq
          child:
            name: seq
        action:
          inlineChild: true
        repeatOnSuccess: true

      - name: Elide sequence of length 1
        match:
          self:
            name: seq
            count: 1
        action:
          replaceByChild: 0
        repeatOnSuccess: true


