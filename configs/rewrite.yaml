name: Default Rewrite
passes:

  - name: Pass 1
    singlePass: true
    downwards:

      - name: (x.f)(y) -> f(x,y)
        match:
          self:
            name: apply
            count: 2
          child:
            name: operator
            key: name
            value: "."
            count: 2
            siblingPosition: 0
          nextChild:
            name: delimited
            key: kind
            value: parentheses
        action:
          sequence:
            - replaceName: 
                with: apply
            - inlineChild: true
            - permuteChildren: [0, 1]
            - newNodeChild:
                name: delimited
                key: kind
                value: parentheses
                offset: 1
                length: 2

      - name: Rename negation as seq and toggle sign of number
        match:
          self:
            name: operator
            key: name
            value: "-"
            count: 1
          child:
            name: number
        action:
          sequence:
          - replaceName:
              with: seq
          - childAction:
              rotateOption:
                key: sign
                values: ["+", "-"]

      - name: Operator to Syscall
        match:
          self:
            name: operator
            key: name
            matches: "[-+*/<>]|==|<=|>=|\\.\\.[<=]"
            count: 2
        action:
          replaceName:
            with: syscall

      - name: Change ':=' to bind (POP)
        match:
          self:
            name: operator
            key: name
            value: ":="
            count: 2
        action:
          replaceName:
            with: bind

      - name: Change '<-' to assign (POP)
        match:
          self:
            name: operator
            key: name
            value: "<-"
            count: 2
        action:
          replaceName:
            with: assign

      - name: Change '<--' to update (UCALL)
        match:
          self:
            name: operator
            key: name
            value: "<--"
            count: 2
        action:
          replaceName:
            with: update

      - name: Fuse let parts
        match:
          self:
            name: form
            count: 2
          child:
            name: part
            key: keyword
            value: let
            siblingPosition: 0
        action:
          mergeChildWithNext: false

      - name: Switch
        match:
          self:
            name: form
          child:
            name: part
            key: keyword
            value: switch
            siblingPosition: 0
        action:
          replaceName:
            with: switch

      - name: remove endcase
        match:
          self:
            name: switch
          child:
            name: part
            key: keyword
            value: endcase
        action:
          removeChild: true

      - name: mark else part as default
        match:
          parent:
            name: switch
          self:
            name: part
            key: keyword
            value: else
        action:
          replaceName:
            with: default

      - name: mark case and then parts
        match:
          parent:
            name: switch
          self:
            name: part
            key: keyword
            value.regexp: case|then
        action:
          replaceName:
            src: self
            from: value

  - name: Pass 2, Conditional, handle ifnot/elseifnot
    singlePass: true
    downwards:

      - name: part/if
        match:
          self:
            name: part
            key: keyword
            value: if
        action:
          replaceValue:
            key: iftype
            with: if

      - name: part/elseif
        match:
          self:
            name: part
            key: keyword
            value: elseif
        action:
          replaceValue:
            key: iftype
            with: elseif

      - name: part/ifnot
        match:
          self:
            name: part
            key: keyword
            value: ifnot
        action:
          replaceValue:
            key: iftype
            with: if

      - name: part/elseifnot
        match:
          self:
            name: part
            key: keyword
            value: elseifnot
        action:
          replaceValue:
            key: iftype
            with: elseif

    upwards:
      - name: form->if
        match:
          self:
            name: form
          child:
            name: part
            key: iftype
            value: if
            siblingPosition: 0
        action:
          replaceName:
            with: if

      - name: add-else
        match:
          self:
            name: if
          child:
            name: part
            key: keyword
            value: else
            cmp: false
            siblingPosition: -1
        action:
          newNodeChild:
            name: part
            key: keyword
            value: else
            offset: 1
            length: 0

      - name: normalise-elseif
        match:
          self:
            name: if
          child:
            name: part
            key: iftype
            value: elseif
            siblingPosition: -3
        action:
          newNodeChild:
            name: if
            length: 3
        repeatOnSuccess: true

  - name: Pass 3, Conditional, introduce ifnot
    singlePass: true
    downwards:
      - name: if-not
        match:
          self:
            name: if
          child:
            name: part
            key: keyword
            value: ifnot
            siblingPosition: 0
        action:
          replaceName:
            with: ifnot

      - name: elseif-not
        match:
          self:
            name: if
          child:
            name: part
            key: keyword
            value: elseifnot
            siblingPosition: 0
        action:
          replaceName:
            with: ifnot

  - name: Pass 4, convert forms to seq
    downwards:
      - name: Rename form using keyword
        match:
          self:
            name: form
          child:
            name: part
            key: keyword
            siblingPosition: 0
        action:
          replaceName:
            src: child
            from: value

      - name: Rename parts to seq
        match:
          self:
            name: part 
        action:
          replaceName:
            with: seq

      - name: Parentheses to seq
        match:
          self:
            name: delimited
            key: kind
            value: parentheses
        action:
          replaceName:
            with: seq

    upwards:
    - name: Inline nested sequences
      match:
        self:
          name: seq
        child:
          name: seq
      action:
        inlineChild: true
      repeatOnSuccess: true

    - name: seq-1
      match:
        self:
          name: seq
          count: 1
      action:
        replaceByChild: 0
      onSuccess: Inline nested sequences

  - name: Pass 5, Validate
    optional: true
    singlePass: true
    downwards:
      - name: number
        match:
          self:
            name: number
        action:
          continue: true
        breakOnSuccess: true

      - name: string
        match:
          self:
            name: string
        action:
          continue: true
        breakOnSuccess: true

      - name: string
        match:
          self:
            name: id
        action:
          continue: true
        breakOnSuccess: true

      - name: Syscall
        match:
          self:
            name: syscall
        action:
          continue: true
        breakOnSuccess: true

      - name: If
        match:
          self:
            name: if
        action:
          assert:
            self:
              count: 3
        breakOnSuccess: true

      - name: Switch
        match:
          self:
            name: switch
        action:
          continue: true
        breakOnSuccess: true

      - name: Case
        match:
          self:
            name: case
        action:
          assert:
            parent:
              name: switch
        breakOnSuccess: true

      - name: Else
        match:
          self:
            name: else
        action:
          assert:
            parent:
              name: switch
            self:
              siblingPosition: -1
        breakOnSuccess: true

      - name: Seq
        match:
          self:
            name: seq
        action:
          continue: true
        breakOnSuccess: true

      - name: Unit
        match:
          self:
            name: unit
        action:
          continue: true
        breakOnSuccess: true

      - name: for
        match:
          self:
            name: for
        action:
          assert:
            self:
              count: 2
        breakOnSuccess: true

      - name: bind
        match:
          self:
            name: bind
        action:
          assert:
            self:
              count: 2
        breakOnSuccess: true

      - name: assign
        match:
          self:
            name: assign
        action:
          assert:
            self:
              count: 2
        breakOnSuccess: true

      - name: update
        match:
          self:
            name: update
        action:
          assert:
            self:
              count: 2
        breakOnSuccess: true

      - name: Apply
        match:
          self:
            name: apply
        action:
          assert:
            self:
              count: 2
        breakOnSuccess: true

      - name: Def
        match:
          self:
            name: def
        action:
          assert:
            self:
              count: 2
        breakOnSuccess: true

      - name: Let
        match:
          self:
            name: let
        action:
          assert:
            continue: true
        breakOnSuccess: true

      - name: Fn
        match:
          self:
            name: fn
        action:
          assert:
            self:
              count: 2
        breakOnSuccess: true

      - name: Fail Validation
        match:
          self:
            name.regexp: ".*"
        action:
          fail: "Validation failed"
