# The top-level normalization flag applies to all tests unless overridden.
normalize: xml
tests:

  - name: incr
    command: "go run ../cmd/nutmeg-tokenizer | go run ../cmd/nutmeg-parser -f xml --no-spans"
    input: |
      def incr(x):
          x + 1
      end
    expected_output: |
      <unit>
        <form syntax="surround">
          <part keyword="def">
            <apply kind="parentheses">
              <id name="incr"/>
              <delimited kind="parentheses">
                <id name="x"/>
              </delimited>
            </apply>
          </part>
          <part keyword="=&gt;&gt;">
            <operator name="+" syntax="infix">
              <id name="x"/>
              <number base="10" exponent="0" fraction="" mantissa="1" sign="+"/>
            </operator>
          </part>
        </form>
      </unit>

  - name: assignments
    command: "go run ../cmd/nutmeg-tokenizer | go run ../cmd/nutmeg-parser -f xml --no-spans"
    input: |
      bar <- copy(bar)
      bar[0] <-- value
    expected_output: |
      <unit>
        <operator name="&lt;-" syntax="infix">
          <id name="bar"/>
          <apply kind="parentheses">
            <id name="copy"/>
            <delimited kind="parentheses">
              <id name="bar"/>
            </delimited>
          </apply>
        </operator>
        <operator name="&lt;--" syntax="infix">
          <apply kind="brackets">
            <id name="bar"/>
            <delimited kind="brackets">
              <number base="10" exponent="0" fraction="" mantissa="0" sign="+"/>
            </delimited>
          </apply>
          <id name="value"/>
        </operator>
      </unit>

  - name: switch
    command: "go run ../cmd/nutmeg-tokenizer | go run ../cmd/nutmeg-parser -f xml --no-spans"
    input: |
      switch f( x )  ### selector
      case 0:
          total <- total + 1
      case 1:
          total <- total * 2 + 1
      else
          total <- 0
      endswitch
    expected_output: |
      <unit>
        <form syntax="surround">
          <part keyword="switch">
            <apply kind="parentheses">
              <id name="f"/>
              <delimited kind="parentheses">
                <id name="x"/>
              </delimited>
            </apply>
          </part>
          <part keyword="case">
            <number base="10" exponent="0" fraction="" mantissa="0" sign="+"/>
          </part>
          <part keyword="then">
            <operator name="&lt;-" syntax="infix">
              <id name="total"/>
              <operator name="+" syntax="infix">
                <id name="total"/>
                <number base="10" exponent="0" fraction="" mantissa="1" sign="+"/>
              </operator>
            </operator>
          </part>
          <part keyword="case">
            <number base="10" exponent="0" fraction="" mantissa="1" sign="+"/>
          </part>
          <part keyword="then">
            <operator name="&lt;-" syntax="infix">
              <id name="total"/>
              <operator name="+" syntax="infix">
                <operator name="*" syntax="infix">
                  <id name="total"/>
                  <number base="10" exponent="0" fraction="" mantissa="2" sign="+"/>
                </operator>
                <number base="10" exponent="0" fraction="" mantissa="1" sign="+"/>
              </operator>
            </operator>
          </part>
          <part keyword="else">
            <operator name="&lt;-" syntax="infix">
              <id name="total"/>
              <number base="10" exponent="0" fraction="" mantissa="0" sign="+"/>
            </operator>
          </part>
        </form>
      </unit>

  - name: conditional as part of quicksort
    command: "go run ../cmd/nutmeg-tokenizer | go run ../cmd/nutmeg-parser -f xml --no-spans"
    input: |
      def quicksortInPlace( A, lo, hi ):
          if lo < hi:
              p := partition( A, lo, hi )
              quicksort( A, lo, p - 1 )
              quicksort( A, p + 1, hi )
          end
      end
    expected_output: |
      <unit>
        <form syntax="surround">
          <part keyword="def">
            <apply kind="parentheses">
              <id name="quicksortInPlace"/>
              <delimited kind="parentheses" separator="comma">
                <id name="A"/>
                <id name="lo"/>
                <id name="hi"/>
              </delimited>
            </apply>
          </part>
          <part keyword="=&gt;&gt;">
            <form syntax="surround">
              <part keyword="if">
                <operator name="&lt;" syntax="infix">
                  <id name="lo"/>
                  <id name="hi"/>
                </operator>
              </part>
              <part keyword="then">
                <operator name=":=" syntax="infix">
                  <id name="p"/>
                  <apply kind="parentheses">
                    <id name="partition"/>
                    <delimited kind="parentheses" separator="comma">
                      <id name="A"/>
                      <id name="lo"/>
                      <id name="hi"/>
                    </delimited>
                  </apply>
                </operator>
                <apply kind="parentheses">
                  <id name="quicksort"/>
                  <delimited kind="parentheses" separator="comma">
                    <id name="A"/>
                    <id name="lo"/>
                    <operator name="-" syntax="infix">
                      <id name="p"/>
                      <number base="10" exponent="0" fraction="" mantissa="1" sign="+"/>
                    </operator>
                  </delimited>
                </apply>
                <apply kind="parentheses">
                  <id name="quicksort"/>
                  <delimited kind="parentheses" separator="comma">
                    <id name="A"/>
                    <operator name="+" syntax="infix">
                      <id name="p"/>
                      <number base="10" exponent="0" fraction="" mantissa="1" sign="+"/>
                    </operator>
                    <id name="hi"/>
                  </delimited>
                </apply>
              </part>
            </form>
          </part>
        </form>
      </unit>
